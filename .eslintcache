[{"/Users/Remy/Documents/ProjFinal/projfinal/src/App.js":"1","/Users/Remy/Documents/ProjFinal/projfinal/src/utils/eth-utils.js":"2","/Users/Remy/Documents/ProjFinal/projfinal/src/index.js":"3","/Users/Remy/Documents/ProjFinal/projfinal/src/components/Banner.js":"4","/Users/Remy/Documents/ProjFinal/projfinal/src/components/Dapp.js":"5","/Users/Remy/Documents/ProjFinal/projfinal/src/components/Footer.js":"6","/Users/Remy/Documents/ProjFinal/projfinal/src/reportWebVitals.js":"7","/Users/Remy/Documents/ProjFinal/playyyer_www/src/index.js":"8","/Users/Remy/Documents/ProjFinal/playyyer_www/src/App.js":"9","/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Events.js":"10","/Users/Remy/Documents/ProjFinal/playyyer_www/src/reportWebVitals.js":"11","/Users/Remy/Documents/ProjFinal/playyyer_www/src/hooks/useWeb3.js":"12","/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/LoginForm.js":"13","/Users/Remy/Documents/ProjFinal/playyyer_www/src/Dapp.js":"14","/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Header.js":"15","/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/EventsPages/Event1.js":"16","/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Home.js":"17","/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Web3Info.js":"18"},{"size":359,"mtime":1606386092311,"results":"19","hashOfConfig":"20"},{"size":1202,"mtime":1606339426542,"results":"21","hashOfConfig":"20"},{"size":645,"mtime":1606315677870,"results":"22","hashOfConfig":"20"},{"size":412,"mtime":1606385941103,"results":"23","hashOfConfig":"20"},{"size":12277,"mtime":1606386452404,"results":"24","hashOfConfig":"20"},{"size":340,"mtime":1606384558210,"results":"25","hashOfConfig":"20"},{"size":362,"mtime":1606315423952,"results":"26","hashOfConfig":"20"},{"size":645,"mtime":1606666989143,"results":"27","hashOfConfig":"28"},{"size":387,"mtime":1606727066389,"results":"29","hashOfConfig":"28"},{"size":1643,"mtime":1606727066401,"results":"30","hashOfConfig":"28"},{"size":362,"mtime":1606727066635,"results":"31","hashOfConfig":"28"},{"size":7563,"mtime":1606727066460,"results":"32","hashOfConfig":"28"},{"size":1942,"mtime":1606727066422,"results":"33","hashOfConfig":"28"},{"size":1104,"mtime":1606727066398,"results":"34","hashOfConfig":"28"},{"size":622,"mtime":1606727066415,"results":"35","hashOfConfig":"28"},{"size":938,"mtime":1606730244845,"results":"36","hashOfConfig":"28"},{"size":939,"mtime":1606731345594,"results":"37","hashOfConfig":"28"},{"size":294,"mtime":1606731282280,"results":"38","hashOfConfig":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pdivri",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qa0s6h",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Remy/Documents/ProjFinal/projfinal/src/App.js",[],"/Users/Remy/Documents/ProjFinal/projfinal/src/utils/eth-utils.js",[],"/Users/Remy/Documents/ProjFinal/projfinal/src/index.js",[],["77","78"],"/Users/Remy/Documents/ProjFinal/projfinal/src/components/Banner.js",[],"/Users/Remy/Documents/ProjFinal/projfinal/src/components/Dapp.js",["79","80"],"import React, { useEffect, useReducer } from \"react\";\nimport {\n  Heading,\n  Text,\n  Center,\n  VStack,\n  Button,\n  HStack,\n  Box,\n  Badge,\n  List,\n  UnorderedList,\n  ListItem,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/core\";\n// https://docs.ethers.io/v5/\nimport { ethers } from \"ethers\";\nimport {\n  accountConnected2MetaMask,\n  sendEtherTransaction,\n} from \"../utils/eth-utils\";\n\n//reducer to update web3 state : check if web3 injected, if connected to MetaMask, get account connected, balance...\nconst web3Reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_isWeb3\":\n      return { ...state, isWeb3: action.isWeb3 };\n    case \"SET_isEnabled\":\n      return { ...state, isEnabled: action.isEnabled };\n    case \"SET_account\":\n      return { ...state, account: action.account };\n    case \"SET_provider\":\n      return { ...state, provider: action.provider };\n    case \"SET_network\":\n      return { ...state, network: action.network };\n    case \"SET_signer\":\n      return { ...state, signer: action.signer };\n    case \"SET_balance\":\n      return { ...state, balance: action.balance };\n    default:\n      throw new Error(`Unhandled action ${action.type} in web3Reducer`);\n  }\n};\n\nconst initialWeb3State = {\n  isWeb3: false,\n  isEnabled: false,\n  account: ethers.constants.AddressZero,\n  provider: null,\n  signer: null,\n  network: null,\n  balance: \"0\",\n};\n\n//reducer to update specific dapp state: user chooses to connect to MetaMask, amount to buy\nconst dappReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_isConnecting\":\n      return { ...state, isConnecting: action.isConnecting };\n    case \"SET_buyValue\":\n      return { ...state, buyValue: action.buyValue };\n    default:\n      throw new Error(`Unhandled action ${action.type} in dappReducer`);\n  }\n};\n\n//ICO address receiving ethers and selling tokens with values shown in ethers\nconst initialDappState = {\n  buyValue: \"0\",\n  isConnecting: false,\n  myAddr: \"0x987D87a9bfD550b9A38cBc9249dCAA64307C8E7B\", //Remy account 2\n};\n\nconst fetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return { ...state, isLoading: true, isError: false };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return { ...state, isLoading: false, isError: true };\n    case \"SET_QUERY\":\n      return { ...state, query: action.payload };\n    case \"SET_URL\":\n      return { ...state, url: action.payload };\n    default:\n      throw new Error(`Unhandled action ${action.type} in fetchReducer`);\n  }\n};\n\nfunction Dapp() {\n  const [web3State, web3Dispatch] = useReducer(web3Reducer, initialWeb3State);\n  const [dappState, dappDispatch] = useReducer(dappReducer, initialDappState);\n\n  //event handler when clicking to connect to MetaMask\n  const handleConnectButtonClick = () => {\n    if (!web3State.isEnabled)\n      dappDispatch({ type: \"SET_isConnecting\", isConnecting: true });\n  };\n\n  //event handler to change value to buy\n  const handleChangeValue = (currentBuyValue) => {\n    dappDispatch({\n      type: \"SET_buyValue\",\n      buyValue: currentBuyValue,\n    });\n  };\n\n  //event handler to send value for buying tokens\n  const handleBuyButtonClick = async () =>\n    await sendEtherTransaction(web3State.signer, web3State.provider, {\n      to: dappState.myAddr,\n      value: ethers.utils.parseEther(dappState.buyValue),\n    });\n\n  // Check if Web3 is injected only on mount\n  useEffect(() => {\n    if (typeof window.ethereum !== \"undefined\") {\n      web3Dispatch({ type: \"SET_isWeb3\", isWeb3: true });\n    } else {\n      web3Dispatch({ type: \"SET_isWeb3\", isWeb3: false });\n    }\n  }, []);\n\n  // Check if already connected to MetaMask on mount and when isWeb3 from web3State changes value\n  useEffect(() => {\n    const checkIfConnected = async () => {\n      const account = await accountConnected2MetaMask();\n      // if connected set account to connected address, if not: \"\"\n      if (account) {\n        web3Dispatch({ type: \"SET_isEnabled\", isEnabled: true });\n        web3Dispatch({ type: \"SET_account\", account: account });\n      } else {\n        web3Dispatch({ type: \"SET_isEnabled\", isEnabled: false });\n      }\n    };\n    //set isEnabled/account only if web3 is injected (isWeb3 === true)\n    if (web3State.isWeb3) {\n      checkIfConnected();\n    }\n  }, [web3State.isWeb3]);\n\n  //If not connected to MetaMask, user connects by clicking button\n  useEffect(() => {\n    const connect2MetaMask = async () => {\n      try {\n        //MetaMask pop-up to ask for connection (method: \"eth_requestAccounts\"), account is an array with one address in a string\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        web3Dispatch({ type: \"SET_isEnabled\", isEnabled: true });\n        web3Dispatch({ type: \"SET_account\", account: accounts[0] });\n      } catch (e) {\n        web3Dispatch({ type: \"SET_isEnabled\", isEnabled: false });\n        web3Dispatch({\n          type: \"SET_account\",\n          account: initialWeb3State.account,\n        });\n        console.log(\"connect to MetaMask error :\", e);\n      } finally {\n        dappDispatch({ type: \"SET_isConnecting\", isConnecting: false });\n      }\n    };\n    /*call connect2MetaMask only if web3 injected, not connected already and user\nclicked the button to connect (so set isConnecting to true). If connected set\nisEnabled to true and account, if error set isEnabled to false and account to\ninitial address 0. In any case, success or failure, close the connecting phase\n(similar to loading) and set isConnecting to false.*/\n    if (web3State.isWeb3 && !web3State.isEnabled && dappState.isConnecting) {\n      connect2MetaMask();\n    }\n    //dependency array with variables of if clause\n  }, [web3State.isWeb3, dappState.isConnecting, web3State.isEnabled]);\n\n  // Connect to provider via ethers methods\n  useEffect(() => {\n    const connect2Provider = async () => {\n      try {\n        /*Create a new Web3Provider, which wraps an existing Web3-compatible\n        external Provider (window.ethereum created by MetaMask) and expose it\n        as an ethers.js Provider which can then be used with the rest of the\n        library.*/\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        web3Dispatch({ type: \"SET_provider\", provider });\n        console.log(provider);\n\n        /*Returns a JsonRpcSigner which is managed by this Ethereum node and has\n        inherits from Signer sendTransaction method */\n        const signer = provider.getSigner();\n        web3Dispatch({ type: \"SET_signer\", signer });\n        console.log(signer);\n\n        //Returns the Network object this Provider is connected to\n        const network = await provider.getNetwork();\n        web3Dispatch({ type: \"SET_network\", network });\n        console.log(network);\n\n        // Returns the balance of address in wei as a Big Number\n        const _balance = await provider.getBalance(web3State.account);\n        /*parseEther( etherString ) and formatEther( wei ) are used to\n        convert between string representations (in Ether), which are displayed to or\n        entered by the user and Big Number representations which can have\n        mathematical operations handled safely. */\n        const balance = ethers.utils.formatEther(_balance);\n        web3Dispatch({ type: \"SET_balance\", balance });\n        console.log(_balance);\n      } catch (e) {\n        web3Dispatch({\n          type: \"SET_network\",\n          network: initialWeb3State.network,\n        });\n        web3Dispatch({\n          type: \"SET_balance\",\n          balance: initialWeb3State.balance,\n        });\n        console.log(\"connect to provider error :\", e);\n      }\n    };\n    //connect to provider only if connected to MetaMask and account is not address 0\n    if (\n      web3State.isEnabled &&\n      web3State.account !== ethers.constants.AddressZero\n    ) {\n      connect2Provider();\n    }\n  }, [web3State.isEnabled, web3State.account]);\n\n  return (\n    <>\n    <Center>\n        <VStack>\n          <Heading mb={5} mt={10}>\n            PLAYYYER\n          </Heading>\n          <Box bg=\"WhiteSmoke\" w=\"100%\" p={4}>\n          {!web3State.isWeb3 && <Text mb=\"1rem\">Merci d'installer MetaMask pour vous connecter et vous inscrire aux évènements</Text>}\n\n          {web3State.isWeb3 && (\n            <Box mb={3} alignItems=\"baseline\">\n              Statut:{\" \"}\n              {web3State.isEnabled ? (\n                <Badge colorScheme=\"green\">connecté</Badge>\n              ) : (\n                <Badge colorScheme=\"red\">déconnecté</Badge>\n              )}\n            </Box>\n          )}\n\n          {web3State.isEnabled &&\n            web3State.network !== null &&\n            web3State.account !== ethers.constants.AddressZero && (\n              <>\n                <UnorderedList>\n                  <ListItem mb={3}>\n                    Votre compte Metamask: <Text as=\"b\">{web3State.account}</Text>\n                  </ListItem>\n                  <ListItem mb={3}>\n                    Votre solde: <Text as=\"b\">{web3State.balance}</Text>\n                  </ListItem>\n                  <ListItem mb={3}>\n                    Vous etes connecter au réseau{\" \"}\n                    <Text as=\"b\">{web3State.network.name}</Text>\n                  </ListItem>\n                </UnorderedList>\n              </>\n            )}\n          {!web3State.isEnabled && (\n            <Center><Button colorScheme=\"blue\" onClick={handleConnectButtonClick}>Ce connecter</Button></Center>\n          )}\n          </Box>\n          <Box p=\"6\" borderWidth=\"1px\" borderRadius=\"lg\">\n            <VStack>\n            <HStack>\n              <Text fontSize=\"xl\">Evènement 1</Text>\n              <NumberInput\n              value={dappState.buyValue}\n              defaultValue={initialDappState.buyValue}\n              step={1}\n              min={0}\n              max={web3State.balance}\n              onChange={handleChangeValue}\n              >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n\n                  <Button colorScheme=\"blue\" onClick={handleBuyButtonClick}>\n                    Achetez un token / place pour {dappState.buyValue} ETH\n                  </Button>\n                </HStack>\n                <HStack>\n              <Text fontSize=\"xl\">Evènement 2</Text>\n              <NumberInput\n              value={dappState.buyValue}\n              defaultValue={initialDappState.buyValue}\n              step={1}\n              min={0}\n              max={web3State.balance}\n              onChange={handleChangeValue}\n              >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n\n                  <Button colorScheme=\"blue\" onClick={handleBuyButtonClick}>\n                    Achetez un token / place pour {dappState.buyValue} ETH\n                  </Button>\n                </HStack>\n                <HStack>\n              <Text fontSize=\"xl\">Evènement 3</Text>\n              <NumberInput\n              value={dappState.buyValue}\n              defaultValue={initialDappState.buyValue}\n              step={1}\n              min={0}\n              max={web3State.balance}\n              onChange={handleChangeValue}\n              >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n\n                  <Button colorScheme=\"blue\" onClick={handleBuyButtonClick}>\n                    Achetez un token / place pour {dappState.buyValue} ETH\n                  </Button>\n                </HStack>\n            </VStack>\n          </Box>\n          </VStack>\n          </Center>\n    </>\n  );\n}\n\nexport default Dapp;","/Users/Remy/Documents/ProjFinal/projfinal/src/components/Footer.js",[],"/Users/Remy/Documents/ProjFinal/projfinal/src/reportWebVitals.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/index.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/App.js",["81","82","83"],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Events.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/reportWebVitals.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/hooks/useWeb3.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/LoginForm.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/Dapp.js",["84","85","86","87","88","89"],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Header.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/EventsPages/Event1.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Home.js",[],"/Users/Remy/Documents/ProjFinal/playyyer_www/src/components/Web3Info.js",["90","91","92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":11,"column":3,"nodeType":"100","messageId":"101","endLine":11,"endColumn":7},{"ruleId":"98","severity":1,"message":"102","line":78,"column":7,"nodeType":"100","messageId":"101","endLine":78,"endColumn":19},{"ruleId":"98","severity":1,"message":"103","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":26},{"ruleId":"98","severity":1,"message":"104","line":2,"column":28,"nodeType":"100","messageId":"101","endLine":2,"endColumn":40},{"ruleId":"98","severity":1,"message":"105","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"98","severity":1,"message":"106","line":16,"column":10,"nodeType":"100","messageId":"101","endLine":16,"endColumn":19},{"ruleId":"98","severity":1,"message":"107","line":16,"column":21,"nodeType":"100","messageId":"101","endLine":16,"endColumn":26},{"ruleId":"98","severity":1,"message":"108","line":18,"column":10,"nodeType":"100","messageId":"101","endLine":18,"endColumn":18},{"ruleId":"98","severity":1,"message":"109","line":18,"column":20,"nodeType":"100","messageId":"101","endLine":18,"endColumn":31},{"ruleId":"98","severity":1,"message":"110","line":19,"column":10,"nodeType":"100","messageId":"101","endLine":19,"endColumn":20},{"ruleId":"98","severity":1,"message":"111","line":19,"column":22,"nodeType":"100","messageId":"101","endLine":19,"endColumn":35},{"ruleId":"98","severity":1,"message":"106","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":19},{"ruleId":"98","severity":1,"message":"107","line":5,"column":21,"nodeType":"100","messageId":"101","endLine":5,"endColumn":26},{"ruleId":"98","severity":1,"message":"112","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":6,"column":20,"nodeType":"100","messageId":"101","endLine":6,"endColumn":31},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'fetchReducer' is assigned a value but never used.","'Playyyer_address' is defined but never used.","'Playyyer_abi' is defined but never used.","'useContract' is defined but never used.","'web3State' is assigned a value but never used.","'login' is assigned a value but never used.","'getValue' is assigned a value but never used.","'setGetValue' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'showInfo' is assigned a value but never used.","'setShowInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]